on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.16']
    name: run lint @ ${{ matrix.go }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - run: go run golang.org/x/tools/cmd/goimports -w .
    - run: go mod tidy
    - name: Check goimports and go mod tidy
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          git status
          exit 1
        fi

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.16' ]
    name: run tests @ ${{ matrix.go }}
    services:
      zookeeper:
        image: wurstmeister/zookeeper
        env:
          SERVICE_NAME: zookeeper
          CONTAINER_NAME: zk-node-1
          ZOOKEEPER_SERVER_IDS: zk-node-1:1
          ZOOKEEPER_INSTANCES: zk-node-1
          ZOOKEEPER_ZK_NODE_1_HOST: zookeeper
          ZOOKEEPER_ZK_NODE_1_CLIENT_PORT: 2181
          ZOOKEEPER_ZK_NODE_1_PEER_PORT: 2888
          ZOOKEEPER_ZK_NODE_1_LEADER_ELECTION_PORT: 3888
        ports:
          - 2181:2181
      kafka:
        image: wurstmeister/kafka:2.12-2.4.1
        env:
          KAFKA_LISTENERS: LISTENER_INT://kafka:29092,LISTENER_EXT://kafka:9092
          KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://kafka:29092,LISTENER_EXT://localhost:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        ports:
          - 9092:9092
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_DB: kafka-consumer
          POSTGRES_USER: kafka-consumer
          PGDATA: /var/lib/postgresql/data/pgdata
          POSTGRES_PASSWORD: kafka-consumer
        ports:
          - 15432:5432
    steps:
    - uses: actions/checkout@v2
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - run: go test -v ./...
    - run: sleep 5 && LOG_LEVEL=error go test -timeout=100s -count=1 -v --tags=integration ./integration/

  gosec:
    runs-on: ubuntu-latest
    name: run gosec
    steps:
      - uses: actions/checkout@v2

      - name: Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...

  codeql:
    runs-on: ubuntu-latest
    name: run codeql
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v2
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.16', '1.17' ]
    name: run build @ ${{ matrix.go }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - run: go build -v ./...
